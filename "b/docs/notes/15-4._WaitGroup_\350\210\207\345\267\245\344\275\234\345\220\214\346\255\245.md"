# 4. WaitGroup 與工作同步
當需要等待多個 goroutine 結束時，可使用 `sync.WaitGroup`：

```go
var wg sync.WaitGroup
for _, f := range files {
    wg.Add(1)
    go func(name string) {
        defer wg.Done()
        thumbnail.ImageFile(name)
    }(f)
}
wg.Wait()
```

此例中 `wg.Wait()` 會在所有 goroutine 呼叫 `Done()` 後才返回，確保主程式不會太早結束。若 goroutine 在工作完畢前提前返回，也需透過 `defer wg.Done()` 保證計數正確遞減。

`sync.WaitGroup` is presented in section 8.5 as a simple way to wait for a collection of goroutines. Always call `Add` before launching each goroutine, and use `Done` (often with `defer`) when the goroutine completes. Once all have finished, `Wait` unblocks the caller.

